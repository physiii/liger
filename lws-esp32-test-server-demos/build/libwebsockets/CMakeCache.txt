# This is the CMakeCache file.
# For build in directory: /home/andy/circuits/lws-esp32-test-server-demos/build/libwebsockets
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//No help, variable specified on the command line.
BUILD_DIR_BASE:UNINITIALIZED=/home/andy/circuits/lws-esp32-test-server-demos/build

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=RELEASE

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/home/andy/esp/xtensa-esp32-elf/bin/xtensa-esp32-elf-gcc-ar

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/home/andy/esp/xtensa-esp32-elf/bin/xtensa-esp32-elf-gcc-ranlib

CMAKE_C_FLAGS:STRING=-nostdlib -Wall -Werror 	-I/home/andy/circuits/lws-esp32-test-server-demos/build/include 	-I/usr/local/src/esp/esp-idf/components/newlib/platform_include 	-I/usr/local/src/esp/esp-idf/components/mdns/include 	-I/usr/local/src/esp/esp-idf/components/heap/include 	-I/usr/local/src/esp/esp-idf/components/driver/include 	-I/usr/local/src/esp/esp-idf/components/spi_flash/include 	-I/usr/local/src/esp/esp-idf/components/nvs_flash/include 	-I/usr/local/src/esp/esp-idf/components/tcpip_adapter/include 	-I/usr/local/src/esp/esp-idf/components/lwip/include/lwip/posix 	-I/usr/local/src/esp/esp-idf/components/lwip/include/lwip 	-I/usr/local/src/esp/esp-idf/components/lwip/include/lwip/port 	-I/usr/local/src/esp/esp-idf/components/esp32/include/ 	-I/usr/local/src/esp/esp-idf/components/bootloader_support/include/ 	-I/usr/local/src/esp/esp-idf/components/app_update/include/ 	-I$(IDF_PATH)/components/soc/esp32/include/ 	-I$(IDF_PATH)/components/soc/include/ 	-I$(IDF_PATH)/components/vfs/include/ 	-std=gnu99 -Os -ggdb -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -mlongcalls -nostdlib -Wall -Werror=all -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wextra -Wno-unused-parameter -Wno-sign-compare -Wno-old-style-declaration -I/home/andy/circuits/lws-esp32-test-server-demos/components/libwebsockets/plugins -I/home/andy/circuits/lws-esp32-test-server-demos/build/libwebsockets/include -I/home/andy/circuits/lws-esp32-test-server-demos/components/libwebsockets/lib -I/usr/local/src/esp/esp-idf/components/heap/include -I/usr/local/src/esp/esp-idf/components/soc/include -I/usr/local/src/esp/esp-idf/components/vfs/include -DLWS_IS_FACTORY_APPLICATION=0 -I/usr/local/src/esp/esp-idf/components/soc/esp32/include/ -I/usr/local/src/esp/esp-idf/components/esp32/include -DNDEBUG=1 -Os 	-I/usr/local/src/esp/esp-idf/components/nvs_flash/test_nvs_host 	-I/usr/local/src/esp/esp-idf/components/freertos/include

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/home/andy/esp/xtensa-esp32-elf/bin/xtensa-esp32-elf-nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/home/andy/esp/xtensa-esp32-elf/bin/xtensa-esp32-elf-objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/home/andy/esp/xtensa-esp32-elf/bin/xtensa-esp32-elf-objdump

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=libwebsockets

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/home/andy/esp/xtensa-esp32-elf/bin/xtensa-esp32-elf-strip

//The CMake toolchain file
CMAKE_TOOLCHAIN_FILE:FILEPATH=/home/andy/circuits/lws-esp32-test-server-demos/components/libwebsockets/contrib/cross-esp32.cmake

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//No help, variable specified on the command line.
CROSS_PATH:UNINITIALIZED=/home/andy/esp/xtensa-esp32-elf/bin/..

//git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//No help, variable specified on the command line.
IDF_PATH:UNINITIALIZED=/usr/local/src/esp/esp-idf

//Libwebsockets include directories
LIBWEBSOCKETS_INCLUDE_DIRS:PATH=/home/andy/circuits/lws-esp32-test-server-demos/components/libwebsockets/lib;/home/andy/circuits/lws-esp32-test-server-demos/build/libwebsockets

//Libwebsocket libraries
LIBWEBSOCKETS_LIBRARIES:STRING=websockets

//Libwebsocket static library
LIBWEBSOCKETS_LIBRARIES_STATIC:STRING=websockets

//Android 7+ reportedly needs this
LWS_AVOID_SIGPIPE_IGN:BOOL=OFF

//No help, variable specified on the command line.
LWS_C_FLAGS:UNINITIALIZED=-std=gnu99 -Os -ggdb -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -mlongcalls -nostdlib -Wall -Werror=all -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wextra -Wno-unused-parameter -Wno-sign-compare -Wno-old-style-declaration -I/home/andy/circuits/lws-esp32-test-server-demos/components/libwebsockets/plugins -I/home/andy/circuits/lws-esp32-test-server-demos/build/libwebsockets/include -I/home/andy/circuits/lws-esp32-test-server-demos/components/libwebsockets/lib -I/usr/local/src/esp/esp-idf/components/heap/include -I/usr/local/src/esp/esp-idf/components/soc/include -I/usr/local/src/esp/esp-idf/components/vfs/include -DLWS_IS_FACTORY_APPLICATION=0 -I/usr/local/src/esp/esp-idf/components/soc/esp32/include/ -I/usr/local/src/esp/esp-idf/components/esp32/include -DNDEBUG=1

//Also try to do dns resolution using gethostbyname if getaddrinfo
// fails
LWS_FALLBACK_GETHOSTBYNAME:BOOL=OFF

//Installation directory for executables
LWS_INSTALL_BIN_DIR:PATH=bin

//Installation directory for CMake files
LWS_INSTALL_CMAKE_DIR:PATH=lib/cmake/libwebsockets

//Installation directory for example files
LWS_INSTALL_EXAMPLES_DIR:PATH=bin

//Installation directory for header files
LWS_INSTALL_INCLUDE_DIR:PATH=include

//Installation directory for libraries
LWS_INSTALL_LIB_DIR:PATH=lib

//Compile with support for ipv6
LWS_IPV6:BOOL=OFF

//Path to the libevent include directory
LWS_LIBEVENT_INCLUDE_DIRS:PATH=

//Path to the libevent library
LWS_LIBEVENT_LIBRARIES:PATH=

//Path to the libev include directory
LWS_LIBEV_INCLUDE_DIRS:PATH=

//Path to the libev library
LWS_LIBEV_LIBRARIES:PATH=

//Path to the libuv include directory
LWS_LIBUV_INCLUDE_DIRS:PATH=

//Path to the libuv library
LWS_LIBUV_LIBRARIES:PATH=

//Link the test apps to the shared version of the library. Default
// is to link statically
LWS_LINK_TESTAPPS_DYNAMIC:BOOL=OFF

//No help, variable specified on the command line.
LWS_MBEDTLS_INCLUDE_DIRS:UNINITIALIZED=/usr/local/src/esp/esp-idf/components/openssl/include;/usr/local/src/esp/esp-idf/components/mbedtls/mbedtls/include;/usr/local/src/esp/esp-idf/components/mbedtls/port/include

//Server SSL certificate directory
LWS_OPENSSL_CLIENT_CERTS:PATH=../share

//Path to the OpenSSL include directory
LWS_OPENSSL_INCLUDE_DIRS:PATH=

//Path to the OpenSSL library
LWS_OPENSSL_LIBRARIES:PATH=

//Build for OPTEE
LWS_PLAT_OPTEE:BOOL=OFF

//Build libwebsockets reproducible. It removes the build user and
// hostname from the build
LWS_REPRODUCIBLE:BOOL=ON

//Compile with support for http/1 (needed for ws)
LWS_ROLE_H1:BOOL=ON

//Compile with support for websockets
LWS_ROLE_WS:BOOL=ON

//Path to the sqlite3 include directory
LWS_SQLITE3_INCLUDE_DIRS:PATH=

//Path to the sqlite3 library
LWS_SQLITE3_LIBRARIES:PATH=

//SSL support should make use of the OS-installed CA root certs
LWS_SSL_CLIENT_USE_OS_CA_CERTS:BOOL=ON

//Include SSL server use ECDH certificate
LWS_SSL_SERVER_WITH_ECDH_CERT:BOOL=OFF

//Build the static version of the library with position-independent
// code
LWS_STATIC_PIC:BOOL=OFF

//Compile with support for UNIX domain socket
LWS_UNIX_SOCK:BOOL=OFF

//Don't use the BSD getifaddrs implementation from libwebsockets
// if it is missing (this will result in a compilation error) ...
// The default is to assume that your libc provides it. On some
// systems such as uclibc it doesn't exist.
LWS_WITHOUT_BUILTIN_GETIFADDRS:BOOL=OFF

//Don't build the lws sha-1 (eg, because openssl will provide it
LWS_WITHOUT_BUILTIN_SHA1:BOOL=OFF

//Don't build the client part of the library
LWS_WITHOUT_CLIENT:BOOL=OFF

//Don't build the daemonization api
LWS_WITHOUT_DAEMONIZE:BOOL=ON

//Don't compile with extensions
LWS_WITHOUT_EXTENSIONS:BOOL=ON

//Don't build the server part of the library
LWS_WITHOUT_SERVER:BOOL=OFF

//Don't build the libwebsocket-test-apps
LWS_WITHOUT_TESTAPPS:BOOL=OFF

//Don't build the client test application
LWS_WITHOUT_TEST_CLIENT:BOOL=OFF

//Don't build the ping test application
LWS_WITHOUT_TEST_PING:BOOL=OFF

//Don't build the test server
LWS_WITHOUT_TEST_SERVER:BOOL=OFF

//Don't build the test server version that uses external poll
LWS_WITHOUT_TEST_SERVER_EXTPOLL:BOOL=OFF

//Support generating Apache-compatible access logs
LWS_WITH_ACCESS_LOG:BOOL=OFF

//Enable support for ACME automatic cert acquisition + maintenance
// (letsencrypt etc)
LWS_WITH_ACME:BOOL=1

//Use BoringSSL replacement for OpenSSL
LWS_WITH_BORINGSSL:BOOL=OFF

//Use bundled zlib version (Windows only)
LWS_WITH_BUNDLED_ZLIB:BOOL=OFF

//Include CGI (spawn process with network-connected stdin/out/err)
// APIs
LWS_WITH_CGI:BOOL=OFF

//Use CyaSSL replacement for OpenSSL. When setting this, you also
// need to specify LWS_CYASSL_LIBRARIES and LWS_CYASSL_INCLUDE_DIRS
LWS_WITH_CYASSL:BOOL=OFF

//Enable features recommended for distro packaging
LWS_WITH_DISTRO_RECOMMENDED:BOOL=OFF

//Build for ESP32
LWS_WITH_ESP32:BOOL=1

//Export libwebsockets CMake targets.  Disable if they conflict
// with an outer cmake project.
LWS_WITH_EXPORT_LWSTARGETS:BOOL=ON

//Build with gcc gcov coverage instrumentation
LWS_WITH_GCOV:BOOL=OFF

//With the Generic Sessions plugin
LWS_WITH_GENERIC_SESSIONS:BOOL=OFF

//Enable support for Generic Hash (SHA1 + SHA2 with api independent
// of TLS backend)
LWS_WITH_GENHASH:BOOL=OFF

//Enable support for Generic RSA (RSA with api independent of TLS
// backend)
LWS_WITH_GENRSA:BOOL=OFF

//Compile with server support for HTTP/2
LWS_WITH_HTTP2:BOOL=1

//Support for rewriting HTTP proxying (requires libhubbub)
LWS_WITH_HTTP_PROXY:BOOL=OFF

//JSON Web Signature (RFC7515) API
LWS_WITH_JWS:BOOL=OFF

//Build latency measuring code into the library
LWS_WITH_LATENCY:BOOL=OFF

//With the Lightweight JSON Parser
LWS_WITH_LEJP:BOOL=OFF

//With LEJP configuration parser as used by lwsws
LWS_WITH_LEJP_CONF:BOOL=OFF

//Compile with support for libev
LWS_WITH_LIBEV:BOOL=OFF

//Compile with support for libevent
LWS_WITH_LIBEVENT:BOOL=OFF

//Compile with support for libuv
LWS_WITH_LIBUV:BOOL=OFF

//Libwebsockets Webserver
LWS_WITH_LWSWS:BOOL=OFF

//Use mbedTLS (>=2.0) replacement for OpenSSL. When setting this,
// you also may need to specify LWS_MBEDTLS_LIBRARIES and LWS_MBEDTLS_INCLUDE_DIRS
LWS_WITH_MBEDTLS:BOOL=OFF

//Also build the normally standalone minimal examples, for QA
LWS_WITH_MINIMAL_EXAMPLES:BOOL=OFF

//Disable all logging from being compiled in
LWS_WITH_NO_LOGS:BOOL=OFF

//Track peers and restrict resources a single peer can allocate
LWS_WITH_PEER_LIMITS:BOOL=OFF

//Support plugins for protocols and extensions
LWS_WITH_PLUGINS:BOOL=OFF

//Support http ranges (RFC7233)
LWS_WITH_RANGES:BOOL=1

//Selftests run at context creation
LWS_WITH_SELFTESTS:BOOL=OFF

//Support json + jscript server monitoring
LWS_WITH_SERVER_STATUS:BOOL=OFF

//Build the shared version of the library
LWS_WITH_SHARED:BOOL=ON

//Provide SMTP support
LWS_WITH_SMTP:BOOL=OFF

//Allow use of SOCKS5 proxy on client connections
LWS_WITH_SOCKS5:BOOL=OFF

//Require SQLITE3 support
LWS_WITH_SQLITE3:BOOL=OFF

//Include SSL support (defaults to OpenSSL or similar, mbedTLS
// if LWS_WITH_MBEDTLS is set)
LWS_WITH_SSL:BOOL=ON

//Build the static version of the library
LWS_WITH_STATIC:BOOL=ON

//Keep statistics of lws internal operations
LWS_WITH_STATS:BOOL=0

//Use wolfSSL replacement for OpenSSL. When setting this, you also
// need to specify LWS_WOLFSSL_LIBRARIES and LWS_WOLFSSL_INCLUDE_DIRS
LWS_WITH_WOLFSSL:BOOL=OFF

//Support serving pre-zipped files
LWS_WITH_ZIP_FOPS:BOOL=1

//Include zlib support (required for extensions)
LWS_WITH_ZLIB:BOOL=1

//Path to the wolfSSL include directory
LWS_WOLFSSL_INCLUDE_DIRS:PATH=

//Path to the wolfSSL library
LWS_WOLFSSL_LIBRARIES:PATH=

//Path to the zlib include directory
LWS_ZLIB_INCLUDE_DIRS:PATH=

//Path to the zlib library
LWS_ZLIB_LIBRARIES:PATH=

//The RPM builder tool
RPMTools_RPMBUILD_EXECUTABLE:FILEPATH=RPMTools_RPMBUILD_EXECUTABLE-NOTFOUND

//Path to a file.
ZLIB_INCLUDE_DIR:PATH=/home/andy/circuits/lws-esp32-test-server-demos/components/zlib

//No help, variable specified on the command line.
ZLIB_LIBRARY:UNINITIALIZED=/home/andy/circuits/lws-esp32-test-server-demos/build/zlib/libzlib.a

//Value Computed by CMake
libwebsockets_BINARY_DIR:STATIC=/home/andy/circuits/lws-esp32-test-server-demos/build/libwebsockets

//Value Computed by CMake
libwebsockets_SOURCE_DIR:STATIC=/home/andy/circuits/lws-esp32-test-server-demos/components/libwebsockets

//Dependencies for the target
websockets_LIB_DEPENDS:STATIC=general;/home/andy/circuits/lws-esp32-test-server-demos/build/zlib/libzlib.a;general;m;


########################
# INTERNAL cache entries
########################

//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/andy/circuits/lws-esp32-test-server-demos/build/libwebsockets
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=10
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/andy/circuits/lws-esp32-test-server-demos/components/libwebsockets
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.10
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[/usr/bin/git][v()]
//Details about finding ZLIB
FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/home/andy/circuits/lws-esp32-test-server-demos/build/zlib/libzlib.a][/home/andy/circuits/lws-esp32-test-server-demos/components/zlib][v1.2.11()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Test LWS_HAS_INTPTR_T
LWS_HAS_INTPTR_T:INTERNAL=1
//Have function atoll
LWS_HAVE_ATOLL:INTERNAL=
//Have function bzero
LWS_HAVE_BZERO:INTERNAL=
//Have include dlfcn.h
LWS_HAVE_DLFCN_H:INTERNAL=
//Have function execvpe
LWS_HAVE_EXECVPE:INTERNAL=
//Have include fcntl.h
LWS_HAVE_FCNTL_H:INTERNAL=1
//Have function fork
LWS_HAVE_FORK:INTERNAL=
//Have function getenv
LWS_HAVE_GETENV:INTERNAL=
//Have function getloadavg
LWS_HAVE_GETLOADAVG:INTERNAL=
//Have include in6addr.h
LWS_HAVE_IN6ADDR_H:INTERNAL=
//Have library cap
LWS_HAVE_LIBCAP:INTERNAL=
//Have include malloc.h
LWS_HAVE_MALLOC_H:INTERNAL=1
//Have include memory.h
LWS_HAVE_MEMORY_H:INTERNAL=
//Have function memset
LWS_HAVE_MEMSET:INTERNAL=
//Have include netinet/in.h
LWS_HAVE_NETINET_IN_H:INTERNAL=1
//Test LWS_HAVE_PIPE2
LWS_HAVE_PIPE2:INTERNAL=
//Have include pthread.h
LWS_HAVE_PTHREAD_H:INTERNAL=1
//Have function RSA_set0_key
LWS_HAVE_RSA_SET0_KEY:INTERNAL=
//Have function snprintf
LWS_HAVE_SNPRINTF:INTERNAL=
//Have function socket
LWS_HAVE_SOCKET:INTERNAL=
//Have function SSL_CTX_get0_certificate
LWS_HAVE_SSL_CTX_get0_certificate:INTERNAL=
//Have function SSL_CTX_set1_param
LWS_HAVE_SSL_CTX_set1_param:INTERNAL=
//Have function SSL_set_info_callback
LWS_HAVE_SSL_SET_INFO_CALLBACK:INTERNAL=
//Have function SSL_get0_alpn_selected
LWS_HAVE_SSL_get0_alpn_selected:INTERNAL=
//Have function SSL_set_alpn_protos
LWS_HAVE_SSL_set_alpn_protos:INTERNAL=
//Have include stdint.h
LWS_HAVE_STDINT_H:INTERNAL=1
//Have include stdlib.h
LWS_HAVE_STDLIB_H:INTERNAL=1
//Have function strerror
LWS_HAVE_STRERROR:INTERNAL=
//Have include strings.h
LWS_HAVE_STRINGS_H:INTERNAL=1
//Have include string.h
LWS_HAVE_STRING_H:INTERNAL=1
//Have include sys/capability.h
LWS_HAVE_SYS_CAPABILITY_H:INTERNAL=
//Have include sys/prctl.h
LWS_HAVE_SYS_PRCTL_H:INTERNAL=
//Have include sys/socket.h
LWS_HAVE_SYS_SOCKET_H:INTERNAL=1
//Have include sys/sockio.h
LWS_HAVE_SYS_SOCKIO_H:INTERNAL=
//Have include sys/stat.h
LWS_HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/types.h
LWS_HAVE_SYS_TYPES_H:INTERNAL=1
//Test LWS_HAVE_TCP_USER_TIMEOUT
LWS_HAVE_TCP_USER_TIMEOUT:INTERNAL=
//Have include unistd.h
LWS_HAVE_UNISTD_H:INTERNAL=1
//Have function vfork
LWS_HAVE_VFORK:INTERNAL=
//Have include vfork.h
LWS_HAVE_VFORK_H:INTERNAL=
//Test LWS_HAVE_VISIBILITY
LWS_HAVE_VISIBILITY:INTERNAL=1
//Have function X509_VERIFY_PARAM_set1_host
LWS_HAVE_X509_VERIFY_PARAM_set1_host:INTERNAL=
//Have function X509_get_key_usage
LWS_HAVE_X509_get_key_usage:INTERNAL=
//Have include zlib.h
LWS_HAVE_ZLIB_H:INTERNAL=
//Have function _atoi64
LWS_HAVE__ATOI64:INTERNAL=
//Have function _snprintf
LWS_HAVE__SNPRINTF:INTERNAL=
//Have function _stat32i64
LWS_HAVE__STAT32I64:INTERNAL=
//Have function _vsnprintf
LWS_HAVE__VSNPRINTF:INTERNAL=
//Test LWS_HAVE___inline
LWS_HAVE___inline:INTERNAL=1
//Test LWS_HAVE___inline__
LWS_HAVE___inline__:INTERNAL=1
//Test LWS_HAVE_inline
LWS_HAVE_inline:INTERNAL=1
//Have include stdlib.h;stdarg.h;string.h;float.h
STDC_HEADERS:INTERNAL=1
//ADVANCED property for variable: ZLIB_INCLUDE_DIR
ZLIB_INCLUDE_DIR-ADVANCED:INTERNAL=1

